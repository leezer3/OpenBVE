<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".cs" #>
<#
     int major = 1; 
     int minor = 4; 
     int build = 40; 
     int revision = 0;
	 int CheckDays = 0;
	 string UserName;
  
     try
     {
			//This is a quick and easy hack to increment the build number once a day if built
			CheckDays = (int)(DateTime.UtcNow - new DateTime(2016,3,8)).TotalDays;
			build += CheckDays;
			//The revision represents the total number of minutes since midnight when this version was built.
			revision = (int)DateTime.Now.TimeOfDay.TotalMinutes;
			UserName = Environment.UserName;
     }
     catch
     {
         revision = 0; 
		 UserName = "unknown";
     }
 #>

 // This code was generated by a tool. Any changes made manually will be lost
 // the next time this code is regenerated.
 // 
 
using System;
using System.Reflection;
using System.Runtime.InteropServices;

[assembly: AssemblyTitle("openBVE")]
[assembly: AssemblyProduct("openBVE")]
[assembly: AssemblyCopyright("The openBVE Project")]
[assembly: ComVisible(false)]
[assembly: AssemblyVersion("<#= major #>.<#= minor #>.<#= build #>.<#= revision #>")]
[assembly: AssemblyInformationalVersion("<#= major #>.<#= minor #>.<#= build #>.<#= revision #>-<#= UserName #>")]
[assembly: AssemblyFileVersion("<#= major #>.<#= minor #>.<#= build #>.<#= revision #>")]
[assembly: CLSCompliant(true)]

namespace OpenBve {
	internal static partial class Program {
		internal const bool IsDevelopmentVersion = false;
		internal const string VersionSuffix = "";
	}
}
